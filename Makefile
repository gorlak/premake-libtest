# GNU Make solution makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x64)
  foo_config = debug_x64
  bar_config = debug_x64
  baz_config = debug_x64
endif
ifeq ($(config),release_x64)
  foo_config = release_x64
  bar_config = release_x64
  baz_config = release_x64
endif

PROJECTS := foo bar baz

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

foo: 
ifneq (,$(foo_config))
	@echo "==== Building foo ($(foo_config)) ===="
	@${MAKE} --no-print-directory -C . -f foo.make config=$(foo_config)
endif

bar: foo
ifneq (,$(bar_config))
	@echo "==== Building bar ($(bar_config)) ===="
	@${MAKE} --no-print-directory -C . -f bar.make config=$(bar_config)
endif

baz: foo bar
ifneq (,$(baz_config))
	@echo "==== Building baz ($(baz_config)) ===="
	@${MAKE} --no-print-directory -C . -f baz.make config=$(baz_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f foo.make clean
	@${MAKE} --no-print-directory -C . -f bar.make clean
	@${MAKE} --no-print-directory -C . -f baz.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x64"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   foo"
	@echo "   bar"
	@echo "   baz"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
